name: Tests
on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  # Job: Run unit tests
  tests:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Prepare environment
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.0
          tools: composer:v2
          coverage: xdebug

      # Define Composer cache
      - name: Get Composer cache directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Define Composer cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: tests-php-8.0
          restore-keys: |
            tests-php-

      # Install dependencies
      - name: Install Composer and dependencies
        run: composer install --no-progress
      - name: Install node modules
        run: yarn --frozen-lockfile

      # Build Frontend assets (necessary for application tests)
      - name: Build Frontend assets
        run: yarn dev

      # Start Symfony server
      - name: Run PHP web server
        run: |
          php -S 0.0.0.0:8000 -t public/ &
          sleep 2
      - id: php-server
        run: echo "::set-output name=baseUrl::http://$(ip addr show eth0 | grep -Po 'inet \K[\d.]+'):8000"

      # Run tests
      - name: Build coverage directory
        run: mkdir -p .build/coverage
      - name: Run PHP tests with coverage
        run: composer test:coverage
      - name: Run JavaScript tests with coverage
        uses: cypress-io/github-action@v2
        with:
          browser: electron
          config: baseUrl=${{ steps.php-server.outputs.baseUrl }}

      # Report coverage
      - name: Fix coverage path
        working-directory: .build/coverage
        run: sed -i 's/\/home\/runner\/work\/typo3-badges\/typo3-badges\//\/github\/workspace\//g' clover.xml
        if: ${{ github.actor != 'dependabot[bot]' }}
      - name: Run SonarCloud scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        if: ${{ github.actor != 'dependabot[bot]' }}

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
